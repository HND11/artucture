name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4 # Actualizado

      - name: Setup Node
        uses: actions/setup-node@v4 # Actualizado
        with:
          node-version: '20' # Especifica una versión LTS o la que necesites

      - name: Install dependencies
        # Considerar usar 'npm ci' para instalaciones más rápidas y fiables en CI
        # run: npm ci
        uses: bahmutov/npm-install@v1 # O mantenlo si prefieres esta acción

      - name: Build project
        run: npm run build

      # --- PASO AÑADIDO PARA DEPURACIÓN ---
      - name: Check build output directory
        run: |
          echo "Checking contents of ./dist..."
          ls -R ./dist
          # Si el comando 'ls' falla, significa que ./dist no existe.
          # Si existe pero está vacío, el comando mostrará sólo './dist:'.

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4 # Actualizado
        with:
          name: production-files
          path: ./dist
          if-no-files-found: error # Añadido: Falla si ./dist está vacío o no existe

    deploy:
      name: Deploy
      needs: build # Ensures 'build' job completes successfully first
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main' # Only run on pushes to the main branch

      steps:
        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: production-files
            # No 'path' specified, files will be downloaded to the workspace root '.'

        # --- PASO DE DEPURACIÓN AJUSTADO ---
        - name: Check downloaded files
          run: |
            echo "Checking contents after download (workspace root)..."
            ls -R . # List everything in the root directory '.'
            # El comando 'ls -R ./dist' fue eliminado porque la carpeta dist ya no existe aquí.

        - name: Deploy to GitHub Pages
          uses: peaceiris/actions-gh-pages@v4
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            # --- CORREGIDO ---
            publish_dir: . # Publish from the root directory where files were downloaded
